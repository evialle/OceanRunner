h1. OceanRunner


h2. Introduction 

A problem, with JUnit is that you CAN'T use multiple interesting Runners for a Test: *OceanRunner* tries to solve that problem.
By offering an easy way to integrate _"RunnersLike"_ class, named _*OceanModule*_, you may conjugate many behaviors of unit testing strategy.

When you can use a single Runner for test, you may use many *OceanModules*.

h2. Built in OceanModules:

* *@CategoryOceanModule@*: include or exclude tests based not only on annotations
* *@ConcurrentOceanModule@*: run simultaneously different tests
* *@JUnit3AdapterOceanModule@*: run your JUnit3 tests
* *@StatisticsOceanModule@*: process statistics about last success/failure of your test
* *@OpenEjb30OceanModule@*: Test easily EJB 3.0
* *@MockitoOceanModule@*: Easily use Mockito with your tests


h2. Creating and using your own *OceanModule*

h3. Create your *OceanModule*

Simply create a classe extending @it.freshminutes.oceanrunner.modules.engine.OceanModule@

h3. Use the OceanModule with your TestClass...

And put at the top of your class to Test:

@RunWith(OceanRunner.class)
@OceanModulesToUse({ _MyOwnOceanModule.class_, _MyOwnOceanModule2.class_, _MyOwnOceanModule3.class_})
public class TestClass {
	...
}

h3. ... or define your OceanModule as a default module

Edit your file @oceanrunner.properties@ and set the property: @runners.defaultmodules@
eg.
@runners.defaultmodules=it.freshminutes.oceanrunner.modules.builtin.JUnit3AdapterOceanModule;it.freshminutes.oceanrunner.modules.builtin.CategoryOceanModule@


h2. Defining in a new way your TestSuite with OceanSuite

You may put all the class to test in a text file (one line per class, and line starting by # will not be interpreted).

And run it as follow:

@RunWith(OceanSuite.class)
@OceanSuiteClassListFile("classFileList.txt")
public class TestOceanSuite {

}


h2. License

Apache License 2.0
Version 2.0, January 2004
http://www.apache.org/licenses/